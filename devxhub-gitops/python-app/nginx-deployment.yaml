apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment
  namespace: devxhub
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - name: nginx
        image: nginx:latest
        ports:
        - containerPort: 80
        resources:
          requests:
            cpu: "100m"  # 0.1 CPU
            memory: "128Mi"
          limits:
            cpu: "500m"  # 0.5 CPU
            memory: "256Mi"
        livenessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 15
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        volumeMounts:
        - name: static-storage
          mountPath: /app/static/static_root  # Nginx serves from here
        - name: nginx-config
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
      volumes:
      - name: static-storage
        persistentVolumeClaim:
          claimName: static-pvc
      - name: nginx-config
        configMap:
          name: nginx-config
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-service
  namespace: devxhub
spec:
  type: ClusterIP  # Use LoadBalancer or NodePort depending on your setup
  ports:
  - port: 80
    targetPort: 80
  selector:
    app: nginx

